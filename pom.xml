<project 
        xmlns="http://maven.apache.org/POM/4.0.0" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <!-- 
        Comment:
        1.  it's harder to use postgresql than mysql, more troubleshooting on postgresql
        2.  
        
        Remarks:
        1.  example1 uses javax.transaction.UserTransaction, to serve the following user case
            i) same JVM, transfer N amount from saving account to current account, for the same client
            ii) withdraw N amount from saving account (in terms of datasource A)
            iii) deposit N amount (withdraw -N amount) to current account (in terms of datasource B)
            iv) commit both, either fail will rollback
     
        Environment:
        1.  Windows 7 64 bit (assume OS installed in C:\Windows)
        2.  Eclipse 4.4
        3.  JDK 8.0
        4.  zwamp-1.1.2 (mysql) 
        5.  postgresql 9.4.1-3  
                require to set max_prepared_transactions to a nonzero value in postgresql-9.4.1-3\pgsql\data\postgresql.conf                
                otherwise Caused by: org.postgresql.util.PSQLException: ERROR: prepared transactions are disabled               
                https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server
                
        
        Approach1 - all automate
        1.  "mvn install". This will include   
        2.  this project includes integration test 
        3.  with maven-failsafe-plugin, any java file name with "IT" will be treated as 
            intergration test (by maven, the phase is integration-test). 
        4)  the integration test report can be found in \target\failsafe-reports
       
       
        Reference:
        http://www.atomikos.com/downloads/extreme-transactions/com/atomikos/examples-jta/3.9.3/examples-jta-3.9.3-project.zip
        
        /*
            //conceptual skeleton
            try { 
                userTx = (UserTransaction)getContext().lookup("java:comp/UserTransaction"); 
                connA = getDataSourceA().getConnection(); 
                connB = getDataSourceB().getConnection(); 
                
                userTx.begin();
                
                stmtA = connA.createStatement(); 
                stmtA.execute("update t_account set amount = amount - 500 where account_id = 'A'");
                
                stmtB = connB.createStatement(); 
                stmtB.execute("update t_account set amount = amount + 500 where account_id = 'B'");
                
                userTx.commit();
            
            } catch(SQLException sqle) { 
                try { 
                     userTx.rollback();
                     stmtA.close();
                     stmtB.close();  
                     connA.close();
                     connB.close();                 
                } catch(Exception e) { 
                    e.printStackTrace(); 
                } 
                sqle.printStackTrace(); 
            } 
        */
    -->
        
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
    </properties>
    

    <modelVersion>4.0.0</modelVersion>
    <groupId>jta-jdbc-atomikos-snippets</groupId>
    <artifactId>jta-jdbc-atomikos-snippets</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    
    
    <build>   
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>   
                                
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>sql-maven-plugin</artifactId>
                                        <versionRange>[1.5,)</versionRange>
                                        <goals>
                                            <goal>execute</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    
                                    <action>
                                        <execute>  
                                            <runOnIncremental>false</runOnIncremental>  
                                        </execute>  
                                    </action>
                                </pluginExecution>

                                  
                                                                                                         
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    
        <plugins>   
            
            <!-- initialize -->            
            

            <!-- compile -->                  
            <plugin>                                   
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.6</source>     <!-- no specify -->
                    <target>1.6</target>
                </configuration>                         
            </plugin>  
            


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.9</version>
                    </dependency>
                    <dependency>
                        <groupId>postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.1-901.jdbc4</version>
                    </dependency>
                </dependencies>
                
                <executions>
                    <execution>
                        <id>drop-db-before-test-if-any (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                                                
                                drop database if exists javaee_jta_jdbc_atomikos_example1;                                                        
                            </sqlCommand>
                            <onError>continue</onError>
                        </configuration>
                    </execution>
                    
                    <execution>
                        <id>drop-db-before-test-if-any (postgresql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>org.postgresql.Driver</driver>
                            <url>jdbc:postgresql://localhost:5432</url>
                            <username>postgres</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                                                
                                drop database if exists javaee_jta_jdbc_atomikos_example1;                      
                            </sqlCommand>
                            <onError>continue</onError>
                        </configuration>
                    </execution>
                    

                    <execution>
                        <id>create-db (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                                                        
                                create database javaee_jta_jdbc_atomikos_example1;                                                 
                            </sqlCommand>
                        </configuration>
                    </execution>
                                     
                    <execution>
                        <id>create-db (postgresql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>org.postgresql.Driver</driver>
                            <url>jdbc:postgresql://localhost:5432</url>
                            <username>postgres</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <sqlCommand>                                
                                create database javaee_jta_jdbc_atomikos_example1;                         
                            </sqlCommand>
                        </configuration>
                    </execution>                   
                                      
                    <execution>
                        <id>create-schema (mysql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>src/main/resources/javaee/jta/jdbc/atomikos/example1/mysql/create-schema.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    
                    <execution>
                        <id>create-schema (postgresql)</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>org.postgresql.Driver</driver>
                            <url>jdbc:postgresql://localhost:5432/javaee_jta_jdbc_atomikos_example1</url>
                            <username>postgres</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>src/main/resources/javaee/jta/jdbc/atomikos/example1/postgresql/create-schema.sql</srcFile>                                
                            </srcFiles>
                        </configuration>
                    </execution>


                    <execution>
                        <id>create-data (mysql)</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>jdbc:mysql://localhost:3306</url>
                            <username>root</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <autocommit>true</autocommit>
                            <srcFiles>                                            
                                <srcFile>src/test/resources/javaee/jta/jdbc/atomikos/example1/mysql/insert-record.sql</srcFile>
                            </srcFiles>
                        </configuration>                                               
                    </execution>
                    
                    <execution>
                        <id>create-data (postgresql)</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>org.postgresql.Driver</driver>
                            <url>jdbc:postgresql://localhost:5432/javaee_jta_jdbc_atomikos_example1</url>
                            <username>postgres</username>
                            <password></password>
                            <settingsKey>sensibleKey</settingsKey>
                            <skip>${maven.test.skip}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>                                            
                                <srcFile>src/test/resources/javaee/jta/jdbc/atomikos/example1/postgresql/insert-record.sql</srcFile>
                            </srcFiles>
                        </configuration>                                               
                    </execution>
                    
                </executions>
            </plugin>
        

            <!-- integration-test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
                   
        </plugins>    
    </build>     

    <dependencies>
           
        <!-- junit -->                
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        
        
        <!-- mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.9</version>
        </dependency>
        
               
        <!-- postgresql -->
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.1-901.jdbc4</version>
        </dependency>



        <!--  atomikos - jta implementation --> 
        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions-jta</artifactId>
            <version>3.9.3</version>
        </dependency>
        

        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions-jdbc</artifactId>
            <version>3.9.3</version>
        </dependency>
        
        
        <!-- javax -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <!-- 
                1.  wihout scope = provided, it hits javax/transaction/SystemException
                        test1(javaee.jta.atkmikos.example1.ClientIT): Absent Code attribute in method that is not native or abstract in class file javax/transaction/SystemException
                2.  fix it 
                        a) by adding scope, 
                                https://aishwaryavaishno.wordpress.com/tag/javaxtransactionsystemexception/
                        b) by switch from 6.0 to 7.0, although the quote reference is from 6.0 to 6.0-5, 
                                http://stackoverflow.com/questions/15386950/classformaterror-absent-code-attribute-in-method-that-is-not-native-or-abstract 
             -->
            <version>7.0</version>            
            <scope>provided</scope>
        </dependency>
        
       

    </dependencies>             
</project>